#BlueJ class context
comment0.target=Graph()
comment0.text=\nConstructs\ a\ graph\ with\ no\ nodes\ or\ edges.\n\n
comment1.params=e\ p1\ p2
comment1.target=boolean\ connect(Edge,\ Point2D,\ Point2D)
comment1.text=\nAdds\ an\ edge\ to\ the\ graph\ that\ joins\ the\ nodes\ containing\nthe\ given\ points.\ If\ the\ points\ aren't\ both\ inside\ nodes,\nthen\ no\ edge\ is\ added.\n@param\ e\ the\ edge\ to\ add\n@param\ p1\ a\ point\ in\ the\ starting\ node\n@param\ p2\ a\ point\ in\ the\ ending\ node\n\n
comment10.target=Edge[]\ getEdgePrototypes()
comment10.text=\nGets\ the\ edge\ types\ of\ a\ particular\ graph\ type.\n@return\ an\ array\ of\ edge\ prototypes\n\n
comment11.target=List<Node>\ getNodes()
comment11.text=\nGets\ the\ nodes\ of\ this\ graph.\n@return\ an\ unmodifiable\ list\ of\ the\ nodes\n\n
comment12.target=List<Edge>\ getEdges()
comment12.text=\nGets\ the\ edges\ of\ this\ graph.\n@return\ an\ unmodifiable\ list\ of\ the\ edges\n\n
comment2.params=n\ p
comment2.target=boolean\ add(Node,\ Point2D)
comment2.text=\nAdds\ a\ node\ to\ the\ graph\ so\ that\ the\ top\ left\ corner\ of\nthe\ bounding\ rectangle\ is\ at\ the\ given\ point.\n@param\ n\ the\ node\ to\ add\n@param\ p\ the\ desired\ location\n\n
comment3.params=p
comment3.target=Node\ findNode(Point2D)
comment3.text=\nFinds\ a\ node\ containing\ the\ given\ point.\n@param\ p\ a\ point\n@return\ a\ node\ containing\ p\ or\ null\ if\ no\ nodes\ contain\ p\n\n
comment4.params=p
comment4.target=Edge\ findEdge(Point2D)
comment4.text=\nFinds\ an\ edge\ containing\ the\ given\ point.\n@param\ p\ a\ point\n@return\ an\ edge\ containing\ p\ or\ null\ if\ no\ edges\ contain\ p\n\n
comment5.params=g2
comment5.target=void\ draw(Graphics2D)
comment5.text=\nDraws\ the\ graph\n@param\ g2\ the\ graphics\ context\n\n
comment6.params=n
comment6.target=void\ removeNode(Node)
comment6.text=\nRemoves\ a\ node\ and\ all\ edges\ that\ start\ or\ end\ with\ that\ node\n@param\ n\ the\ node\ to\ remove\n\n
comment7.params=e
comment7.target=void\ removeEdge(Edge)
comment7.text=\nRemoves\ an\ edge\ from\ the\ graph.\n@param\ e\ the\ edge\ to\ remove\n\n
comment8.params=g2
comment8.target=Rectangle2D\ getBounds(Graphics2D)
comment8.text=\nGets\ the\ smallest\ rectangle\ enclosing\ the\ graph\n@param\ g2\ the\ graphics\ context\n@return\ the\ bounding\ rectangle\n\n
comment9.target=Node[]\ getNodePrototypes()
comment9.text=\nGets\ the\ node\ types\ of\ a\ particular\ graph\ type.\n@return\ an\ array\ of\ node\ prototypes\n\n
numComments=13
